name: ðŸ“¦ Publish Docker (Docker Hub)

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: "Release tag (e.g., v1.2.3 or 1.2.3)"
        required: true

permissions:
  contents: read
  packages: write # Required for pushing to container registries

concurrency:
  group: dockerhub-publish
  cancel-in-progress: true

jobs:
  build-and-push:
    name: Build & Push (Docker Hub)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute image name (lowercase)
        id: img
        shell: bash
        run: |
          USER_RAW="${{ secrets.DOCKERHUB_USERNAME }}"
          USER_LC="${USER_RAW,,}"
          IMAGE="docker.io/${USER_LC}/matrix-hub"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          echo "Image: $IMAGE"

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            # For git tags that look like a version, create semver tags
            # e.g., v1.2.3 -> v1.2.3, v1.2, v1
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

            # For `release` events, also tag as 'latest'
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}

            # For `workflow_dispatch`, use the input version as a tag
            type=raw,value=${{ github.event.inputs.version }},enable=${{ github.event_name == 'workflow_dispatch' }}

            # Always tag with the short SHA
            type=sha,prefix=sha-

      - name: Build & push (Docker Hub)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_VERSION=${{ steps.meta.outputs.version }}
            BUILD_COMMIT=${{ github.sha }}
            BUILD_DATE=${{ steps.meta.outputs.created }}

      - name: Inspect multi-arch manifest
        if: always()
        shell: bash
        run: |
          echo "Inspecting tags: ${{ steps.meta.outputs.tags }}"
          # The primary tag will be the most specific one (e.g., the full semver)
          PRIMARY_TAG=$(echo "${{ steps.meta.outputs.tags }}" | cut -d, -f1)
          docker buildx imagetools inspect "${PRIMARY_TAG}"