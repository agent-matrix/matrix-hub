# Stage 1: Build the virtual environments
FROM python:3.11-slim AS builder

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Build toolchain & git (for cloning gateway)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential gcc g++ libpq-dev git \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# --- Hub Setup ---
COPY pyproject.toml README.md ./
COPY src/ ./src/
COPY alembic.ini ./
COPY alembic/ ./alembic/

# Create Hub venv and install (include psycopg for Postgres)
RUN python -m venv /app/.venv && \
    /app/.venv/bin/pip install --no-cache-dir --upgrade pip && \
    /app/.venv/bin/pip install --no-cache-dir \
      . \
      'uvicorn[standard]' \
      gunicorn \
      alembic \
      'psycopg[binary]'

# --- Gateway Setup ---
# Clone the gateway repository into /app/mcpgateway
RUN git clone --depth 1 https://github.com/IBM/mcp-context-forge.git /app/mcpgateway

# Create Gateway venv and install
RUN python -m venv /app/mcpgateway/.venv && \
    /app/mcpgateway/.venv/bin/pip install --no-cache-dir --upgrade pip && \
    /app/mcpgateway/.venv/bin/pip install --no-cache-dir \
      ./mcpgateway \
      'uvicorn[standard]' \
      gunicorn


# Stage 2: Runtime image
FROM python:3.11-slim AS runtime

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/app/.venv/bin:/app/mcpgateway/.venv/bin:${PATH}" \
    INGEST_SCHED_ENABLED=false

# Supervisor to optionally run multiple processes; curl for healthcheck
RUN apt-get update && apt-get install -y --no-install-recommends \
    supervisor curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy built artifacts and both virtualenvs
COPY --from=builder /app /app

# Supervisor config (expected to start hub + gateway when used)
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Security: non-root user
RUN groupadd --system app && useradd --system -g app --home /app app && \
    chown -R app:app /app
USER app

EXPOSE 7300 4444

# Healthcheck for Hub
HEALTHCHECK --interval=30s --timeout=5s --start-period=40s --retries=3 \
  CMD curl -fsS "http://127.0.0.1:7300/" >/dev/null || exit 1

# Default: supervisor (both Hub + Gateway). Compose can override `command:` to run API-only or Worker-only.
CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/conf.d/supervisord.conf"]