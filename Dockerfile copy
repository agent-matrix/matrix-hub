# Stage 1: Build the virtual environments
FROM python:3.11-slim AS builder

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Install build-time dependencies:
# - build-essential: For compiling Python packages
# - git: For cloning the mcpgateway repository
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential gcc g++ libpq-dev git \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# --- Hub Setup ---
# Copy only the Hub's source code and necessary files first.
COPY pyproject.toml README.md ./
COPY src/ ./src/
COPY alembic.ini ./
COPY alembic/ ./alembic/

# Create Hub Virtual Environment (/app/.venv)
RUN python -m venv /app/.venv && \
    /app/.venv/bin/pip install --no-cache-dir --upgrade pip && \
    /app/.venv/bin/pip install --no-cache-dir "." 'uvicorn[standard]' gunicorn alembic

# --- Gateway Setup ---
# Clone the gateway repository from GitHub into /app/mcpgateway
RUN git clone --depth 1 https://github.com/IBM/mcp-context-forge.git /app/mcpgateway

# Create Gateway Virtual Environment (/app/mcpgateway/.venv) using the cloned code
RUN python -m venv /app/mcpgateway/.venv && \
    /app/mcpgateway/.venv/bin/pip install --no-cache-dir --upgrade pip && \
    /app/mcpgateway/.venv/bin/pip install --no-cache-dir ./mcpgateway 'uvicorn[standard]' gunicorn


# Stage 2: Create the final production image
FROM python:3.11-slim AS runtime

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Install runtime dependencies (supervisor to run services, curl for healthcheck)
RUN apt-get update && apt-get install -y --no-install-recommends \
    supervisor curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy the application code and both virtual environments from the builder stage.
COPY --from=builder /app /app

# Copy the supervisor configuration file into the image.
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Create a non-root user and group for better security
# FIXED: Changed --ingroup to -g for compatibility with this image's useradd command.
RUN groupadd --system app && useradd --system -g app --home /app app && \
    chown -R app:app /app

# Switch to the non-root user
USER app

EXPOSE 443 4444

# Healthcheck targets the Hub service
HEALTHCHECK --interval=30s --timeout=5s --start-period=40s --retries=3 \
  CMD curl -fsS "http://127.0.0.1:443/" >/dev/null || exit 1

# Start supervisor, which will manage both the Hub and Gateway processes
CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
